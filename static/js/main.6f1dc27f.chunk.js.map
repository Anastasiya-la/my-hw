{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","m","message","src","avatar","alt","message_img","message_angle","message_content","message_name","name","message_text","message_time","time","messageData","HW1","Affair","affair","s","btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","inputClass","type","value","onChange","onKeyPress","add","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","trim","alert","length","e","currentTarget","key","HW3","setUsers","user","v1","SuperInputText","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","Header","Pages","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6f1dc27f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3VBdT\",\"message_img\":\"Message_message_img__3Akv7\",\"message_content\":\"Message_message_content__2NHQc\",\"message_text\":\"Message_message_text__UUWWs\",\"message_time\":\"Message_message_time__3iRfV\",\"message_name\":\"Message_message_name__Oq9p3\",\"message_angle\":\"Message_message_angle__2X0bw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1aP0a\",\"btn\":\"Affairs_btn__3zGu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__ByHdD\",\"errorInput\":\"SuperInputText_errorInput__3Xp3U\",\"error\":\"SuperInputText_error__kJOFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__3Coc1\",\"errorMessage\":\"Greeting_errorMessage__2GEV1\",\"add\":\"Greeting_add__2kTos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__sKlIP\",\"red\":\"SuperButton_red__1rYEP\",\"button\":\"SuperButton_button__3WrD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__XU3S3\",\"column\":\"HW4_column__2LPNx\",\"testSpanError\":\"HW4_testSpanError__2MxcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__29Etg\",\"spanClassName\":\"SuperCheckbox_spanClassName__1WmIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__xcGVP\"};","import React from 'react'\nimport m from './Message.module.css';\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className ={m.message}>\n          <img src = {props.avatar} alt ={'avatar'} className={m.message_img}/>\n            <div className={m.message_angle}></div>\n            <div className = {m.message_content}>\n                <div className = {m.message_name}>{props.name}</div>\n                <div className = {m.message_text}>{props.message}</div>\n                <div className = {m.message_time}>{props.time}</div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div>\n            <div>\n                <span>{props.affair.name}</span>\n                <button className= {s.btn} onClick={deleteCallback}>X</button>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, filterAffairs, FilterType} from './HW2'\nimport s from './Affairs.module.css';\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter:FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button className={s.btn} onClick={setAll}>All</button>\n            <button className={s.btn} onClick={setHigh}>High</button>\n            <button className={s.btn} onClick={setMiddle}>Middle</button>\n            <button className={s.btn} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all'){\n        return affairs\n    } else {\n        return affairs.filter(a => a.priority === filter)\n    }\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number):  Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id) // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: any // need to fix any\n    totalUsers: any // need to fix any\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : \"\"  // need to fix with (?:)\n\n\n    return (\n        <div>\n            <input type={\"text\"} value={name} onChange={setNameCallback} className={inputClass} onKeyPress={onKeyPressHandler}/>\n            <button onClick={addUser} className={s.add}>add</button>\n            <span>{totalUsers}</span>\n            {error && <div className={s.errorMessage}>{error}</div>}\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\nimport s from './Greeting.module.css'\n\ntype GreetingContainerPropsType = {\n    users: UserType // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string | null>(null) // need to fix any\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {// need to fix any\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        if (name.trim() !== \"\") {\n            addUserCallback(name);\n            alert(`Hello  ${name}!`)\n        } else {\n            setError('Name is required')\n        }\n    }\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            addUser();\n        }\n        setError(null)\n    }\n\n    const totalUsers = users.length// need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPressHandler={onKeyPressHandler}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n    length: number\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<any>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let user = {_id: v1(), name: name}\n        setUsers([user, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.error ? s.errorInput : s.superInput} ${className} ` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = ` ${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            {/*<Routes>*/}\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*<Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>*/}\n\n                {/*<Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>*/}\n                // add routes\n\n                {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                {/*<Route path={'/*'} element={<Error404/>}/>*/}\n\n            {/*</Routes>*/}\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Pages/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}